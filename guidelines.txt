This document outlines our development philosophy, core values, and the mandatory technical standards that every team member must follow. Please read this carefully, as adhering to these guidelines is crucial for maintaining high-quality deliverables and efficient workflows.


Our Philosophy
At Galaxy.ai, we believe in creating value by shipping great products efficiently while avoiding unnecessary processes. Here's what we stand for:

Lean and Efficient Operations: We eliminate unnecessary bureaucracy, excessive meetings, and micromanagement so we can focus on the work that truly matters.
Innovation Over Process: We prioritize creativity, problem-solving, and autonomy over rigid procedures.
This means:

No Hand-Holding: Our team is small, and everyone is expected to be independent. We don’t have time to guide you on every small step. Take initiative, ask smart questions, and own your work.

Technical Standards
To ensure consistency, maintainable code, and efficient collaboration, all developers at Galaxy.ai must follow these mandatory technical guidelines. Submissions that do not meet these standards will not be approved or considered.

1. Preparation
Before starting any task, it’s crucial to familiarize yourself with high-quality coding practices and project organization. As part of this, you are required to:

Thoroughly study the Dub GitHub Repository.
This open-source link management infrastructure is an excellent example of effective coding practices, project structure, and documentation standards.
Do not begin any task until you understand the standards demonstrated in this project.
2. Required Tools and Frameworks
Every submission must use the following technologies:

Category

Tool

Framework

Next.js – Use Next.js Best Practices.

Language

TypeScript or JavaScript 

UI/UX

v0.dev – AI-powered UI/UX design

Styling

TailwindCSS and ShadCN 

Code Editor

Cursor –  AI-powered code editor.

Deployments

Vercel – For hosting and deployment.

Database

MongoDB – Use for all database needs.

File Storage

Cloudinary – For secure file storage.

File Upload

Uploadcare – For seamless front-end file upload components.

Auth

Clerk – For managing user authentication and authorization.

3. Coding Standards
General Coding Practices
Next.js Best Practices: Ensure your application is production-ready by following Next.js Best Practices.
Readable Code: Write clean, readable, and modular code. Follow consistent naming conventions, proper indentation, and logical file organization.
Document Your Work: Every feature or component should have clear comments or inline documentation, especially if it involves complex logic.
TypeScript/JavaScript
TypeScript is preferred: Always use strict type-checking to avoid runtime errors.
Avoid Anti-Patterns: Do not use outdated JavaScript practices or anti-patterns that could compromise maintainability or performance.
Styling
Use TailwindCSS for all CSS styling needs.
Use ShadCN for beautifully designed components


UI/UX
Ensure the interface is fully responsive and generated by v0.dev. Consistency in design and usability is critical.
Testing
Test your code thoroughly before submission. This includes functionality, edge cases, and responsiveness.

Code Review and Submission Process
High Standards Are Mandatory: Only submit code that adheres to these guidelines. Submissions that deviate from these standards will be rejected outright.
Self-Review First: Before submitting, test and review your code thoroughly to ensure it meets all requirements.
Code Reviews: We operate on peer code reviews. Be ready to defend your decisions and incorporate feedback.

Key Links for Reference
Dub GitHub Repository
Next.js Production Checklist

Final Notes
At Galaxy.ai, we trust you to deliver your best work. By following these guidelines and embracing our philosophy of autonomy and flexibility, you’ll be contributing to a collaborative, innovative, and efficient environment. Remember, quality and consistency are key – so let’s build something amazing together.

Thank you for being part of Galaxy.ai!

